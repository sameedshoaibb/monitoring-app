apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-monitoring-app
  namespace: python-monitoring-app
  labels:
    app: python-monitoring-app
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: python-monitoring-app
  template:
    metadata:
      labels:
        app: python-monitoring-app
        version: v1
    spec:
      serviceAccountName: python-monitoring-app
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: python-monitoring-app
        image: simple-flask-app:v1.2.0
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        envFrom:
        - configMapRef:
            name: python-monitoring-app-config
        - secretRef:
            name: python-monitoring-app-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/stats
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      #   volumeMounts:
      #   - name: app-data
      #     mountPath: /tmp/logs
      # volumes:
      # - name: app-data
      #   persistentVolumeClaim:
      #     claimName: python-monitoring-app-pvc
      terminationGracePeriodSeconds: 30
